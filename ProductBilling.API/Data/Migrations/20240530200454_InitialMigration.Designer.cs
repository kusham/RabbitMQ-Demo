// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProductBilling.API.Data;

#nullable disable

namespace ProductBilling.API.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240530200454_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ProductBilling.API.Models.Billing", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<string>("BillingAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Currency")
                        .HasColumnType("integer");

                    b.Property<string>("CustomerEmail")
                        .HasColumnType("text");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Billings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c1f93148-64fa-491f-a9ef-293b0b17e43f"),
                            Amount = 150.75m,
                            BillingAddress = "456 Elm St, Springfield, USA",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Currency = 0,
                            CustomerEmail = "alice.johnson@example.com",
                            CustomerName = "Alice Johnson",
                            Notes = "First payment",
                            PaymentMethod = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("e9989635-4967-45a2-b459-456ca57a8a5a"),
                            Amount = 299.99m,
                            BillingAddress = "789 Oak St, Metropolis, USA",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Currency = 0,
                            CustomerEmail = "bob.smith@example.com",
                            CustomerName = "Bob Smith",
                            Notes = "Second payment",
                            PaymentMethod = 0,
                            Status = 0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
